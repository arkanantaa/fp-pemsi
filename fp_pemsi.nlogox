<?xml version="1.0" encoding="utf-8"?>
<model version="NetLogo 7.0.0" snapToGrid="false">
  <code><![CDATA[globals [
  team-list                ; List of active team colors
  environmental-modifier   ; Weather effect multiplier (0.5-1.0)
  weather                  ; Weather slider value (0..1)
  leader-boost-radius      ; Normalized 0..1 (effective radius 2..10)
  maximal-confidence       ; Fixed upper cap for confidence (set in setup)
  maximal-manipulation     ; Fixed upper cap for manipulation (set in setup)
  distinct-team-palette    ; Fixed palette for distinct team colors
  total-teams-reached-3    ; Lifetime count of teams that ever had >=3 members
  counted-teams-3          ; List of team colors already counted towards >=3
  confidence-recovery-rate ; Amount of confidence regained per tick when below baseline
  disband-confidence-threshold ; Leader confidence threshold to trigger immediate disband
  ]

breed [leaders leader]
breed [followers follower]

; Variables for both leaders and followers
turtles-own [
  team-id                   ; Color representing team affiliation
  confidence                ; Strength of belief in team (0-100)
  initial-confidence        ; The agent's initial confidence at creation
  manipulation              ; Ability to influence others (0-100)
  speed                     ; Movement speed per tick
  persuasions-this-tick     ; Count of successful persuasions credited this tick
  disband-timer             ; Timer for disbandment
  dueled-this-tick          ; Flag to ensure at most one duel per tick
  boosted-by                ; Temporary confidence added by leader aura this tick
  lose-streak               ; Counter for consecutive losses
]

to setup
  clear-all
  set-default-shape turtles "person"

  ; Initialize global variables
  set team-list []
  set environmental-modifier 1.0
  ; Set fixed maxima (replaces sliders)
  set maximal-confidence 100
  set maximal-manipulation 100
  set total-teams-reached-3 0
  set counted-teams-3 []
  set confidence-recovery-rate 5
  set disband-confidence-threshold 50
  ; Initialize a high-contrast palette (NetLogo 0-140 color wheel, spaced hues)
  ; Use a palette that avoids white/gray/black for visibility on dark background
  set distinct-team-palette [15 25 35 45 55 65 75 85 95 105 115 125 135
                             20 30 40 50 60 70 80 90 100 110 120 130]

  ; Create the entire population as followers with no team
  create-people number-of-people

  ; Select and promote the top 3 as leaders
  promote-top-leaders

  ; Update environmental modifier based on weather
    sync-ui-variables
    update-environment

  reset-ticks
end

to create-people [num]
  ; Create population of followers with no initial team (use numeric sentinel -1)
  create-followers num [
    setxy random-xcor random-ycor

    ; No team initially: use -1 (numeric) to avoid string color errors
    set team-id -1
    set color white

  ; Assign random attributes (initialized using sliders as minima)
  let conf-range max list 0 (max-confidence - min-confidence)
  set confidence min-confidence + (ifelse-value conf-range > 0 [ random (conf-range + 1) ] [ 0 ])
  set initial-confidence confidence                              ; remember initial value
  let manip-range max list 0 (max-manipulation - min-manipulation)
  set manipulation min-manipulation + (ifelse-value manip-range > 0 [ random (manip-range + 1) ] [ 0 ])
    set speed 0.1 + random-float 0.4 ; 0.1-0.5

    ; Set size based on confidence
    set size 0.5 + (confidence / 200)
    set disband-timer 0
    set lose-streak 0
  ]
end

to promote-top-leaders
  ; Generate colors dynamically based on initial-teams slider
  let color-options [15 105 55 25 85 45 135 125] ; Pool of distinct colors
  let initial-colors []
  repeat initial-teams [
    set initial-colors lput (item (length initial-colors) color-options) initial-colors
  ]

  ; Find the top followers based on slider value
  let potential-leaders max-n-of initial-teams followers [confidence + manipulation]

  ; Promote them to leaders and assign teams
  let i 0
  ask potential-leaders [
    let new-team-color item i initial-colors

    ; Change breed to leader
    set breed leaders

    ; Assign team
    set team-id new-team-color
  apply-team-color true
    set team-list lput new-team-color team-list

    set size size + 0.3

    set i i + 1
    set disband-timer 0
  ]
end

to go
  ; Update environment based on weather
    sync-ui-variables
    update-environment

  ; Reset per-tick persuasion counters
  reset-persuasion-flags
  ; Reset per-tick duel flags
  reset-duel-flags

  ; Revert last tick's temporary leader boosts before applying new ones
  reset-boost-state

  ; Movement phase
  ask turtles [
    move-agent
  ]

  ; Leader actions
  ask leaders [
    boost-confidence
  ]

  ; Follower actions (one-on-one duels instead of radius-based influence)
  duel-phase

  ; Apply persuasion failure penalties
  apply-persuasion-failure-penalties

  ; Ensure each team has the highest-confidence turtle as leader
  reassign-leaders

  ; Update lifetime counter for teams that have ever reached >=3 members
  update-teams-reached-3

  ; Disband weak teams (by timer or low leader confidence)
  disband-weak-teams

  ; Remove teams with zero members from active team list
  prune-empty-teams

  ; Gradual confidence recovery towards initial-confidence baseline
  recover-confidence-phase

  ; Update visuals
  update-team-plots

  tick
end

to update-environment
  ;; Weather scale 0..1 step 0.25
  ;; 0.00 = Ideal (x1.0)
  ;; 0.25 = Difficult Lv1 (x0.8)
  ;; 0.50 = Difficult Lv2 (x0.6)
  ;; 0.75 = Difficult Lv3 (x0.4)
  ;; 1.00 = Maximum Difficulty (x0.2)
  if weather <= 0 [ set environmental-modifier 1.0 ]
  if weather > 0 and weather <= 0.25 [ set environmental-modifier 0.8 ]
  if weather > 0.25 and weather <= 0.5 [ set environmental-modifier 0.6 ]
  if weather > 0.5 and weather <= 0.75 [ set environmental-modifier 0.4 ]
  if weather > 0.75 [ set environmental-modifier 0.2 ]
end

  to sync-ui-variables
    ;; Bridge UI slider names to model globals when present
    carefully [ set weather weather-variable ] [ ]
    carefully [ set leader-boost-radius leader-boost-r ] [ ]
  end
to move-agent
  ; Random movement based on speed
  right random 60 - 30
  forward (speed * environmental-modifier)
  ; Keep agents inside visible world by bouncing at edges
  bounce-at-edges
end

; LEADER PROCEDURES
to boost-confidence
  ; Leaders boost confidence of same-team followers within effective radius
  let my-team team-id
  ; Interpret leader-boost-radius as normalized [0..1], map to [2..10]
  let effective-radius 2 + (8 * leader-boost-radius)
  if effective-radius < 2 [ set effective-radius 2 ]
  if effective-radius > 10 [ set effective-radius 10 ]
  let nearby-followers followers in-radius effective-radius with [team-id = my-team]

  ; Apply a reversible +5 confidence boost to nearby same-team followers
  ask nearby-followers [
    let inc min list 5 (maximal-confidence - confidence)
    if inc > 0 [
      set confidence confidence + inc
      set boosted-by boosted-by + inc
      set size 0.5 + (confidence / 200)
    ]
  ]
end

; FOLLOWER PROCEDURES (Removed radius-based mechanics; duels handle changes)

; --- PERSUASION SUPPORT PROCEDURES ---
to reset-persuasion-flags
  ask turtles [ set persuasions-this-tick 1 ]
end

to apply-persuasion-failure-penalties
  ; Any agent with a team who persuaded no one this tick loses 0.2 confidence
  ask turtles with [team-id != -1 and persuasions-this-tick = 0] [
    set confidence max list 0 (confidence - 0.2)
    set size 0.5 + (confidence / 200)
  ]
end

; --- DUEL MECHANICS ---
to reset-duel-flags
  ask turtles [ set dueled-this-tick false ]
end

to reset-boost-state
  ; Remove temporary leader aura boosts applied in the previous tick
  ask turtles with [boosted-by > 0] [
    set confidence max list 0 (confidence - boosted-by)
    set boosted-by 0
    set size 0.5 + (confidence / 200)
  ]
end

to duel-phase
  ; Pair up random turtles that haven't dueled this tick
  let shuffled shuffle sort turtles
  foreach shuffled [ a ->
    if [dueled-this-tick] of a = false [
      ; Only duel with agents from a different team; prevents friendly fire.
      ; Allows team vs neutral (-1) but disallows neutral vs neutral.
      let opponent one-of turtles with [ self != a and dueled-this-tick = false and team-id != [team-id] of a ]
      if opponent != nobody [
        ; Weather gate: harsh weather reduces duel occurrence
        if random-float 1 < environmental-modifier [
          ask a [ set dueled-this-tick true ]
          ask opponent [ set dueled-this-tick true ]
          resolve-duel a opponent
        ]
      ]
    ]
  ]
end

to resolve-duel [ a b ]
  ; Compute received damage as enemyManipulative - myConfidence (no environment scaling)
  let a_conf [confidence] of a
  let b_conf [confidence] of b
  let a_manip [manipulation] of a
  let b_manip [manipulation] of b

  let a_received max list 0 (b_manip - a_conf)
  let b_received max list 0 (a_manip - b_conf)

  if a_received < b_received [
    ; A wins, B loses
    resolve-loss b a
  ]
  if a_received > b_received [
    ; B wins, A loses
    resolve-loss a b
  ]
  if a_received = b_received [
    ; tie-breaker: higher manipulation wins; if still tie, pick random
    if a_manip > b_manip [ resolve-loss b a ]
    if b_manip > a_manip [ resolve-loss a b ]
    if a_manip = b_manip [
      ifelse random-float 1 < 0.5 [
        resolve-loss b a
      ] [
        resolve-loss a b
      ]
    ]
  ]
end

to resolve-loss [ loser winner ]
  ; After losing, agent either creates new team with probability or joins winner team
  let l_conf [confidence] of loser
  let l_manip [manipulation] of loser
  let l_team [team-id] of loser
  let w_team [team-id] of winner
  let prob ((l_manip - l_conf) / 100) * new-team-chance
  if prob < 0 [ set prob 0 ]
  if prob > 1 [ set prob 1 ]

  ; Winner gains confidence, capped at their initial baseline
  ask winner [
    set confidence min list initial-confidence (confidence + 5)
    set lose-streak 0  ; Reset lose streak on win
    set size 0.5 + (confidence / 200)
  ]

  ; If loser is neutral and winner has a team, instantly join winner's team
  if (l_team = -1 and w_team != -1) [
    ask loser [
      set team-id w_team
      set breed followers
      apply-team-color false
    ]
    stop
  ]

  let roll random-float 1
  if roll < prob [
    ; create new team (become leader)
    ask loser [
      let new-color (ifelse-value (length team-list < length distinct-team-palette)
                        [ next-available-team-color ]
                        [ pick-distinct-color 10 ])
      if not member? new-color team-list [ set team-list lput new-color team-list ]
      set breed leaders
      set team-id new-color
      apply-team-color true
      ; Reset confidence to initial baseline on founding
      set confidence initial-confidence
      set size 0.5 + (confidence / 200)
      ; Founding grace: delay disband logic to allow recruitment
      set disband-timer -24
    ]
  ]
  if roll >= prob [
    if w_team != -1 [
      ; join winner's team (only if winner has a team)
      ask loser [
        set team-id w_team
        set breed followers
        apply-team-color false
        ; Confidence decreases based on lose streak (progressive penalty)
        if l_team != -1 [
          set lose-streak lose-streak + 1
          let base-penalty 2  ; Tunable parameter for streak penalty
          let streak-penalty (lose-streak * base-penalty)
          set confidence max list 0 (confidence - streak-penalty)
          set size 0.5 + (confidence / 200)
        ]
      ]
    ]
    if w_team = -1 [
      ; winner is neutral: do not join neutrality; stay on current team
      ; no change to team-id in this branch
    ]
  ]
end

; --- LEADER MANAGEMENT ---
to reassign-leaders
  foreach team-list [ tcol ->
    let members turtles with [team-id = tcol]
    if any? members [
      let new-leader max-one-of members [confidence]
      ; Promote highest-confidence turtle
      ask new-leader [
        set breed leaders
        apply-team-color true
      ]
      ; Demote all other members to followers
      ask (members with [self != new-leader]) [
        set breed followers
        apply-team-color false
      ]
    ]
  ]
end

to disband-weak-teams
  ; Leaders with zero followers accumulate time; after 168 ticks, try to found a new team or go neutral
  ask leaders [
    let my-team team-id
    let follower-count count followers with [team-id = my-team]
    ; Grace period: negative timer counts toward 0, skip checks
    if disband-timer < 0 [ set disband-timer disband-timer + 1 ]
    if disband-timer >= 0 and follower-count = 0 [ set disband-timer disband-timer + 1 ]
    if follower-count > 0 [ set disband-timer 0 ]

    if disband-timer >= 168 [
      ; Try to found a new team based on probability, else become neutral
      let l_conf confidence
      let l_manip manipulation
      let prob ((l_manip - l_conf) / 100) * new-team-chance
      if prob < 0 [ set prob 0 ]
      if prob > 1 [ set prob 1 ]

      let roll random-float 1
      if roll < prob [
        ; Found a new team (change to a fresh color)
        let new-color (ifelse-value (length team-list < length distinct-team-palette)
                          [ next-available-team-color ]
                          [ pick-distinct-color 10 ])
        if not member? new-color team-list [ set team-list lput new-color team-list ]
        set team-id new-color
        apply-team-color true
        ; Reset confidence to initial baseline on founding
        set confidence initial-confidence
        set size 0.5 + (confidence / 200)
        ; Founding grace: delay disband logic to allow recruitment
        set disband-timer -24
      ]
      if roll >= prob [
        ; Become neutral with a confidence drop, then recover gradually
        set team-id -1
        set breed followers
        set color white
        set confidence max list 0 (confidence - 10)
        set size 0.5 + (confidence / 200)
        set disband-timer 0
      ]

      ; Clean up old team color if no members remain
      let remaining count turtles with [team-id = my-team]
      if remaining = 0 [ set team-list remove my-team team-list ]
    ]
  ]
end

; attempt-to-create-new-team removed: creation happens only via duel loss rule

to-report mix-colors [color1 color2]
  ; Robust color mixing to produce a distinct, valid NetLogo color
  ; Guard against unassigned color (-1) by using partner's color as base
  let base1 (ifelse-value color1 = -1 [ color2 ] [ color1 ])
  let base2 color2

  ; Compute a midpoint hue with wrap-around on NetLogo's 0-140 color wheel
  let raw-mix ( (base1 + base2) / 2 )
  ; Add a small random offset to avoid duplicates and increase distinction
  let mixed-color raw-mix + (10 + random 20)

  ; Normalize into 0-140 color wheel range
  while [mixed-color < 0] [ set mixed-color mixed-color + 140 ]
  while [mixed-color >= 140] [ set mixed-color mixed-color - 140 ]

  ; Avoid black/dark gray segment for visibility
  if mixed-color < 12 [ set mixed-color mixed-color + 20 ]

  ; Ensure distinct from base and existing teams; perturb until unique
  while [ (abs(mixed-color - base1) < 1) or member? mixed-color team-list ] [
    set mixed-color mixed-color + (5 + random 20)
    while [mixed-color >= 140] [ set mixed-color mixed-color - 140 ]
    if mixed-color < 12 [ set mixed-color mixed-color + 20 ]
  ]

  report mixed-color
end

to-report get-team-ids-display
  ;; Simple approach: build team display string with foreach
  let result "Teams: "
  foreach team-list [ t ->
    set result word result (word "[" t "] ")
  ]
  report result
end

to-report get-team-members-display
  ;; Use visual separators since monitors don't support newlines
  let result ""
  foreach team-list [ t ->
    let member-count count turtles with [team-id = t]
    set result word result (word "Team " t ": " member-count "  |  ")
  ]
  report result
end

to-report count-teams-with-min-members [k]
  ;; Count how many ACTIVE teams currently have at least k members
  let n 0
  foreach team-list [ t ->
    if (count turtles with [team-id = t] >= k) [ set n n + 1 ]
  ]
  report n
end

to update-teams-reached-3
  ;; If an active team reaches >=3 members and hasn't been counted before, record it (lifetime, non-decreasing)
  foreach team-list [ t ->
    if (count turtles with [team-id = t] >= 3) and (not member? t counted-teams-3) [
      set counted-teams-3 lput t counted-teams-3
      set total-teams-reached-3 total-teams-reached-3 + 1
    ]
  ]
end

; UTILITY PROCEDURES
to recover-confidence-phase
  ;; Gradually recover confidence up to initial-confidence baseline
  ask turtles [
    if confidence < initial-confidence [
      set confidence min list initial-confidence (confidence + confidence-recovery-rate)
      set size 0.5 + (confidence / 200)
    ]
  ]
end
to prune-empty-teams
  ;; Remove any team color from team-list with zero members
  let to-remove []
  foreach team-list [ t ->
    if (count turtles with [team-id = t] = 0) [ set to-remove lput t to-remove ]
  ]
  foreach to-remove [ t ->
    set team-list remove t team-list
  ]
end

to apply-team-color [is-leader]
  ;; Apply a consistent color scheme for teams with optional vivid mode
  if team-id = -1 [ set color white stop ]
  let base team-id
  let c (ifelse-value is-leader [ base + 2 ] [ base ])
  ; Normalize to color wheel
  while [c >= 140] [ set c c - 140 ]
  while [c < 0] [ set c c + 140 ]
  ; Avoid white for any non-neutral agent
  if c = white [ set c c + 5 ]
  ; Avoid black/dark gray (very low brightness) by shifting hue
  if member? (floor c) [0 1 2 3 4 5 6 7 8 9 10] [ set c c + 20 ]
  set color c
end

to-report next-available-team-color
  ;; Return first unused color from the fixed palette
  foreach distinct-team-palette [ c ->
    if not member? c team-list [ report c ]
  ]
  ; If palette is somehow fully used, fallback to a distinct pick
  report pick-distinct-color 10
end

to-report pick-distinct-color [min-gap]
  ;; Pick a hue in [0,140) that is at least min-gap away from every color in team-list
  let attempts 0
  let c random 140
  while [ attempts < 200
          and (not empty? team-list)
          and member? true (map [ t -> (min list abs(c - t) (140 - abs(c - t))) < min-gap ] team-list)
        ] [
    set c random 140
    set attempts attempts + 1
  ]
  ; Avoid dark hues; shift into brighter band if needed
  if c < 12 [ set c c + 20 ]
  report c
end

to bounce-at-edges
  ;; Strong inward escape to eliminate wall jitter
  let eps 0.5
  let xpush 0
  let ypush 0
  if xcor > max-pxcor [ set xcor max-pxcor - eps set xpush -1 ]
  if xcor < min-pxcor [ set xcor min-pxcor + eps set xpush 1 ]
  if ycor > max-pycor [ set ycor max-pycor - eps set ypush -1 ]
  if ycor < min-pycor [ set ycor min-pycor + eps set ypush 1 ]
  if (xpush != 0 or ypush != 0) [
    let tx xcor + (xpush * 3)
    let ty ycor + (ypush * 3)
    set heading (towardsxy tx ty + (random-float 40 - 20))
    forward 1.5
  ]
end
to update-team-plots
  ; Update team population plot - simplified version
  set-current-plot "Team Population"

  ; Plot total number of teams
  let total-agents count turtles
  plot total-agents
end

to-report team-member-counts
  ;; Returns a list of member counts aligned with team-list
  report map [[t] -> count turtles with [team-id = t]] team-list
end]]></code>
  <widgets>
    <view x="210" wrappingAllowedX="true" y="10" frameRate="30.0" minPycor="-16" height="433" showTickCounter="true" patchSize="13.0" fontSize="10" wrappingAllowedY="true" width="433" tickCounterLabel="ticks" maxPycor="16" updateMode="0" maxPxcor="16" minPxcor="-16"></view>
    <button x="31" y="10" height="40" disableUntilTicks="false" forever="false" kind="Observer" width="63">setup</button>
    <button x="126" y="10" height="40" disableUntilTicks="false" forever="true" kind="Observer" width="63">go</button>
    <slider x="32" step="10" y="317" max="500" width="172" display="number-of-people" height="50" min="50" direction="Horizontal" default="250.0" variable="number-of-people"></slider>
    <slider x="33" step="1" y="388" max="6" width="172" display="initial-teams" height="50" min="2" direction="Horizontal" default="3.0" variable="initial-teams"></slider>
    <slider x="31" step="0.25" y="447" max="1" width="172" display="leader-boost-r" height="50" min="0" direction="Horizontal" default="0.25" variable="leader-boost-r"></slider>
  <slider x="29" step="0.001" y="507" max="1" width="172" display="new-team-chance" height="50" min="0.001" direction="Horizontal" default="0.001" variable="new-team-chance"></slider>
    <slider x="27" step="0.25" y="570" max="1" width="172" display="weather-variable" height="50" min="0" direction="Horizontal" default="0.0" variable="weather-variable"></slider>
    <slider x="27" step="1" y="630" max="100" width="172" display="min-confidence" height="50" min="0" direction="Horizontal" default="20.0" variable="min-confidence"></slider>
    <slider x="27" step="1" y="690" max="100" width="172" display="max-confidence" height="50" min="0" direction="Horizontal" default="80.0" variable="max-confidence"></slider>
    <slider x="27" step="1" y="750" max="100" width="172" display="min-manipulation" height="50" min="0" direction="Horizontal" default="20.0" variable="min-manipulation"></slider>
    <slider x="27" step="1" y="810" max="100" width="172" display="max-manipulation" height="50" min="0" direction="Horizontal" default="80.0" variable="max-manipulation"></slider>
    <plot x="228" autoPlotX="true" yMax="10.0" autoPlotY="true" yAxis="Population" y="476" xMin="0.0" height="175" legend="false" xMax="10.0" yMin="0.0" width="230" xAxis="Time" display="Team Population">
      <setup></setup>
      <update></update>
      <pen interval="1.0" mode="0" display="Team-0" color="-2674135" legend="true">
        <setup></setup>
        <update></update>
      </pen>
      <pen interval="1.0" mode="0" display="Team-1" color="-13791810" legend="true">
        <setup></setup>
        <update></update>
      </pen>
      <pen interval="1.0" mode="0" display="Team-3" color="-13840069" legend="true">
        <setup></setup>
        <update></update>
      </pen>
      <pen interval="1.0" mode="0" display="Team-4" color="-8630108" legend="true">
        <setup></setup>
        <update></update>
      </pen>
      <pen interval="1.0" mode="0" display="Team-2" color="-955883" legend="true">
        <setup></setup>
        <update></update>
      </pen>
    </plot>
    <monitor x="478" precision="17" y="479" height="60" fontSize="11" width="100" display="Active Teams">length team-list</monitor>
    <monitor x="590" precision="17" y="479" height="60" fontSize="11" width="125" display="&gt;=3 Members Teams (lifetime)">total-teams-reached-3</monitor>
    <monitor x="478" precision="0" y="550" height="60" fontSize="9" width="240" display="Team IDs">get-team-ids-display</monitor>
    <monitor x="478" precision="0" y="615" height="120" fontSize="9" width="240" display="Team Members">get-team-members-display</monitor>
  </widgets>
  <info>## WHAT IS IT?

(a general understanding of what the model is trying to show or explain)

## HOW IT WORKS

(what rules the agents use to create the overall behavior of the model)

## HOW TO USE IT

(how to use the model, including a description of each of the items in the Interface tab)

## THINGS TO NOTICE

(suggested things for the user to notice while running the model)

## THINGS TO TRY

(suggested things for the user to try to do (move sliders, switches, etc.) with the model)

## EXTENDING THE MODEL

(suggested things to add or change in the Code tab to make the model more complicated, detailed, accurate, etc.)

## NETLOGO FEATURES

(interesting or unusual features of NetLogo that the model uses, particularly in the Code tab; or where workarounds were needed for missing features)

## RELATED MODELS

(models in the NetLogo Models Library and elsewhere which are of related interest)

## CREDITS AND REFERENCES

(a reference to the model's URL on the web if it has one, as well as any other necessary credits, citations, and links)</info>
  <turtleShapes>
    <shape name="default" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="5"></point>
        <point x="40" y="250"></point>
        <point x="150" y="205"></point>
        <point x="260" y="250"></point>
      </polygon>
    </shape>
    <shape name="airplane" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="0"></point>
        <point x="135" y="15"></point>
        <point x="120" y="60"></point>
        <point x="120" y="105"></point>
        <point x="15" y="165"></point>
        <point x="15" y="195"></point>
        <point x="120" y="180"></point>
        <point x="135" y="240"></point>
        <point x="105" y="270"></point>
        <point x="120" y="285"></point>
        <point x="150" y="270"></point>
        <point x="180" y="285"></point>
        <point x="210" y="270"></point>
        <point x="165" y="240"></point>
        <point x="180" y="180"></point>
        <point x="285" y="195"></point>
        <point x="285" y="165"></point>
        <point x="180" y="105"></point>
        <point x="180" y="60"></point>
        <point x="165" y="15"></point>
      </polygon>
    </shape>
    <shape name="arrow" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="0"></point>
        <point x="0" y="150"></point>
        <point x="105" y="150"></point>
        <point x="105" y="293"></point>
        <point x="195" y="293"></point>
        <point x="195" y="150"></point>
        <point x="300" y="150"></point>
      </polygon>
    </shape>
    <shape name="box" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="285"></point>
        <point x="285" y="225"></point>
        <point x="285" y="75"></point>
        <point x="150" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="135"></point>
        <point x="15" y="75"></point>
        <point x="150" y="15"></point>
        <point x="285" y="75"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="15" y="75"></point>
        <point x="15" y="225"></point>
        <point x="150" y="285"></point>
        <point x="150" y="135"></point>
      </polygon>
      <line endX="150" startY="285" marked="false" color="255" endY="135" startX="150"></line>
      <line endX="15" startY="135" marked="false" color="255" endY="75" startX="150"></line>
      <line endX="285" startY="135" marked="false" color="255" endY="75" startX="150"></line>
    </shape>
    <shape name="bug" rotatable="true" editableColorIndex="0">
      <circle x="96" y="182" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="110" y="127" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <circle x="110" y="75" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <line endX="80" startY="100" marked="true" color="-1920102913" endY="30" startX="150"></line>
      <line endX="220" startY="100" marked="true" color="-1920102913" endY="30" startX="150"></line>
    </shape>
    <shape name="butterfly" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="165"></point>
        <point x="209" y="199"></point>
        <point x="225" y="225"></point>
        <point x="225" y="255"></point>
        <point x="195" y="270"></point>
        <point x="165" y="255"></point>
        <point x="150" y="240"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="165"></point>
        <point x="89" y="198"></point>
        <point x="75" y="225"></point>
        <point x="75" y="255"></point>
        <point x="105" y="270"></point>
        <point x="135" y="255"></point>
        <point x="150" y="240"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="139" y="148"></point>
        <point x="100" y="105"></point>
        <point x="55" y="90"></point>
        <point x="25" y="90"></point>
        <point x="10" y="105"></point>
        <point x="10" y="135"></point>
        <point x="25" y="180"></point>
        <point x="40" y="195"></point>
        <point x="85" y="194"></point>
        <point x="139" y="163"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="162" y="150"></point>
        <point x="200" y="105"></point>
        <point x="245" y="90"></point>
        <point x="275" y="90"></point>
        <point x="290" y="105"></point>
        <point x="290" y="135"></point>
        <point x="275" y="180"></point>
        <point x="260" y="195"></point>
        <point x="215" y="195"></point>
        <point x="162" y="165"></point>
      </polygon>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="255"></point>
        <point x="135" y="225"></point>
        <point x="120" y="150"></point>
        <point x="135" y="120"></point>
        <point x="150" y="105"></point>
        <point x="165" y="120"></point>
        <point x="180" y="150"></point>
        <point x="165" y="225"></point>
      </polygon>
      <circle x="135" y="90" marked="false" color="255" diameter="30" filled="true"></circle>
      <line endX="195" startY="105" marked="false" color="255" endY="60" startX="150"></line>
      <line endX="105" startY="105" marked="false" color="255" endY="60" startX="150"></line>
    </shape>
    <shape name="car" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="300" y="180"></point>
        <point x="279" y="164"></point>
        <point x="261" y="144"></point>
        <point x="240" y="135"></point>
        <point x="226" y="132"></point>
        <point x="213" y="106"></point>
        <point x="203" y="84"></point>
        <point x="185" y="63"></point>
        <point x="159" y="50"></point>
        <point x="135" y="50"></point>
        <point x="75" y="60"></point>
        <point x="0" y="150"></point>
        <point x="0" y="165"></point>
        <point x="0" y="225"></point>
        <point x="300" y="225"></point>
        <point x="300" y="180"></point>
      </polygon>
      <circle x="180" y="180" marked="false" color="255" diameter="90" filled="true"></circle>
      <circle x="30" y="180" marked="false" color="255" diameter="90" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="162" y="80"></point>
        <point x="132" y="78"></point>
        <point x="134" y="135"></point>
        <point x="209" y="135"></point>
        <point x="194" y="105"></point>
        <point x="189" y="96"></point>
        <point x="180" y="89"></point>
      </polygon>
      <circle x="47" y="195" marked="true" color="-1920102913" diameter="58" filled="true"></circle>
      <circle x="195" y="195" marked="true" color="-1920102913" diameter="58" filled="true"></circle>
    </shape>
    <shape name="circle" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
    </shape>
    <shape name="circle 2" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
    </shape>
    <shape name="cow" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="200" y="193"></point>
        <point x="197" y="249"></point>
        <point x="179" y="249"></point>
        <point x="177" y="196"></point>
        <point x="166" y="187"></point>
        <point x="140" y="189"></point>
        <point x="93" y="191"></point>
        <point x="78" y="179"></point>
        <point x="72" y="211"></point>
        <point x="49" y="209"></point>
        <point x="48" y="181"></point>
        <point x="37" y="149"></point>
        <point x="25" y="120"></point>
        <point x="25" y="89"></point>
        <point x="45" y="72"></point>
        <point x="103" y="84"></point>
        <point x="179" y="75"></point>
        <point x="198" y="76"></point>
        <point x="252" y="64"></point>
        <point x="272" y="81"></point>
        <point x="293" y="103"></point>
        <point x="285" y="121"></point>
        <point x="255" y="121"></point>
        <point x="242" y="118"></point>
        <point x="224" y="167"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="73" y="210"></point>
        <point x="86" y="251"></point>
        <point x="62" y="249"></point>
        <point x="48" y="208"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="25" y="114"></point>
        <point x="16" y="195"></point>
        <point x="9" y="204"></point>
        <point x="23" y="213"></point>
        <point x="25" y="200"></point>
        <point x="39" y="123"></point>
      </polygon>
    </shape>
    <shape name="cylinder" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
    </shape>
    <shape name="dot" rotatable="false" editableColorIndex="0">
      <circle x="90" y="90" marked="true" color="-1920102913" diameter="120" filled="true"></circle>
    </shape>
    <shape name="face happy" rotatable="false" editableColorIndex="0">
      <circle x="8" y="8" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="255"></point>
        <point x="90" y="239"></point>
        <point x="62" y="213"></point>
        <point x="47" y="191"></point>
        <point x="67" y="179"></point>
        <point x="90" y="203"></point>
        <point x="109" y="218"></point>
        <point x="150" y="225"></point>
        <point x="192" y="218"></point>
        <point x="210" y="203"></point>
        <point x="227" y="181"></point>
        <point x="251" y="194"></point>
        <point x="236" y="217"></point>
        <point x="212" y="240"></point>
      </polygon>
    </shape>
    <shape name="face neutral" rotatable="false" editableColorIndex="0">
      <circle x="8" y="7" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <rectangle endX="240" startY="195" marked="false" color="255" endY="225" startX="60" filled="true"></rectangle>
    </shape>
    <shape name="face sad" rotatable="false" editableColorIndex="0">
      <circle x="8" y="8" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="168"></point>
        <point x="90" y="184"></point>
        <point x="62" y="210"></point>
        <point x="47" y="232"></point>
        <point x="67" y="244"></point>
        <point x="90" y="220"></point>
        <point x="109" y="205"></point>
        <point x="150" y="198"></point>
        <point x="192" y="205"></point>
        <point x="210" y="220"></point>
        <point x="227" y="242"></point>
        <point x="251" y="229"></point>
        <point x="236" y="206"></point>
        <point x="212" y="183"></point>
      </polygon>
    </shape>
    <shape name="fish" rotatable="false" editableColorIndex="0">
      <polygon color="-1" filled="true" marked="false">
        <point x="44" y="131"></point>
        <point x="21" y="87"></point>
        <point x="15" y="86"></point>
        <point x="0" y="120"></point>
        <point x="15" y="150"></point>
        <point x="0" y="180"></point>
        <point x="13" y="214"></point>
        <point x="20" y="212"></point>
        <point x="45" y="166"></point>
      </polygon>
      <polygon color="-1" filled="true" marked="false">
        <point x="135" y="195"></point>
        <point x="119" y="235"></point>
        <point x="95" y="218"></point>
        <point x="76" y="210"></point>
        <point x="46" y="204"></point>
        <point x="60" y="165"></point>
      </polygon>
      <polygon color="-1" filled="true" marked="false">
        <point x="75" y="45"></point>
        <point x="83" y="77"></point>
        <point x="71" y="103"></point>
        <point x="86" y="114"></point>
        <point x="166" y="78"></point>
        <point x="135" y="60"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="30" y="136"></point>
        <point x="151" y="77"></point>
        <point x="226" y="81"></point>
        <point x="280" y="119"></point>
        <point x="292" y="146"></point>
        <point x="292" y="160"></point>
        <point x="287" y="170"></point>
        <point x="270" y="195"></point>
        <point x="195" y="210"></point>
        <point x="151" y="212"></point>
        <point x="30" y="166"></point>
      </polygon>
      <circle x="215" y="106" marked="false" color="255" diameter="30" filled="true"></circle>
    </shape>
    <shape name="flag" rotatable="false" editableColorIndex="0">
      <rectangle endX="75" startY="15" marked="true" color="-1920102913" endY="300" startX="60" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="90" y="150"></point>
        <point x="270" y="90"></point>
        <point x="90" y="30"></point>
      </polygon>
      <line endX="90" startY="135" marked="true" color="-1920102913" endY="135" startX="75"></line>
      <line endX="90" startY="45" marked="true" color="-1920102913" endY="45" startX="75"></line>
    </shape>
    <shape name="flower" rotatable="false" editableColorIndex="0">
      <polygon color="1504722175" filled="true" marked="false">
        <point x="135" y="120"></point>
        <point x="165" y="165"></point>
        <point x="180" y="210"></point>
        <point x="180" y="240"></point>
        <point x="150" y="300"></point>
        <point x="165" y="300"></point>
        <point x="195" y="240"></point>
        <point x="195" y="195"></point>
        <point x="165" y="135"></point>
      </polygon>
      <circle x="85" y="132" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="130" y="147" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="192" y="85" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="85" y="40" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="177" y="40" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="177" y="132" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="70" y="85" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="130" y="25" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="96" y="51" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="113" y="68" marked="false" color="255" diameter="74" filled="true"></circle>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="189" y="233"></point>
        <point x="219" y="188"></point>
        <point x="249" y="173"></point>
        <point x="279" y="188"></point>
        <point x="234" y="218"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="180" y="255"></point>
        <point x="150" y="210"></point>
        <point x="105" y="210"></point>
        <point x="75" y="240"></point>
        <point x="135" y="240"></point>
      </polygon>
    </shape>
    <shape name="house" rotatable="false" editableColorIndex="0">
      <rectangle endX="255" startY="120" marked="true" color="-1920102913" endY="285" startX="45" filled="true"></rectangle>
      <rectangle endX="180" startY="210" marked="false" color="255" endY="285" startX="120" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="15" y="120"></point>
        <point x="150" y="15"></point>
        <point x="285" y="120"></point>
      </polygon>
      <line endX="270" startY="120" marked="false" color="255" endY="120" startX="30"></line>
    </shape>
    <shape name="leaf" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="210"></point>
        <point x="135" y="195"></point>
        <point x="120" y="210"></point>
        <point x="60" y="210"></point>
        <point x="30" y="195"></point>
        <point x="60" y="180"></point>
        <point x="60" y="165"></point>
        <point x="15" y="135"></point>
        <point x="30" y="120"></point>
        <point x="15" y="105"></point>
        <point x="40" y="104"></point>
        <point x="45" y="90"></point>
        <point x="60" y="90"></point>
        <point x="90" y="105"></point>
        <point x="105" y="120"></point>
        <point x="120" y="120"></point>
        <point x="105" y="60"></point>
        <point x="120" y="60"></point>
        <point x="135" y="30"></point>
        <point x="150" y="15"></point>
        <point x="165" y="30"></point>
        <point x="180" y="60"></point>
        <point x="195" y="60"></point>
        <point x="180" y="120"></point>
        <point x="195" y="120"></point>
        <point x="210" y="105"></point>
        <point x="240" y="90"></point>
        <point x="255" y="90"></point>
        <point x="263" y="104"></point>
        <point x="285" y="105"></point>
        <point x="270" y="120"></point>
        <point x="285" y="135"></point>
        <point x="240" y="165"></point>
        <point x="240" y="180"></point>
        <point x="270" y="195"></point>
        <point x="240" y="210"></point>
        <point x="180" y="210"></point>
        <point x="165" y="195"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="195"></point>
        <point x="135" y="240"></point>
        <point x="120" y="255"></point>
        <point x="105" y="255"></point>
        <point x="105" y="285"></point>
        <point x="135" y="285"></point>
        <point x="165" y="240"></point>
        <point x="165" y="195"></point>
      </polygon>
    </shape>
    <shape name="line" rotatable="true" editableColorIndex="0">
      <line endX="150" startY="0" marked="true" color="-1920102913" endY="300" startX="150"></line>
    </shape>
    <shape name="line half" rotatable="true" editableColorIndex="0">
      <line endX="150" startY="0" marked="true" color="-1920102913" endY="150" startX="150"></line>
    </shape>
    <shape name="pentagon" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="15"></point>
        <point x="15" y="120"></point>
        <point x="60" y="285"></point>
        <point x="240" y="285"></point>
        <point x="285" y="120"></point>
      </polygon>
    </shape>
    <shape name="person" rotatable="false" editableColorIndex="0">
      <circle x="110" y="5" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="105" y="90"></point>
        <point x="120" y="195"></point>
        <point x="90" y="285"></point>
        <point x="105" y="300"></point>
        <point x="135" y="300"></point>
        <point x="150" y="225"></point>
        <point x="165" y="300"></point>
        <point x="195" y="300"></point>
        <point x="210" y="285"></point>
        <point x="180" y="195"></point>
        <point x="195" y="90"></point>
      </polygon>
      <rectangle endX="172" startY="79" marked="true" color="-1920102913" endY="94" startX="127" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="195" y="90"></point>
        <point x="240" y="150"></point>
        <point x="225" y="180"></point>
        <point x="165" y="105"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="105" y="90"></point>
        <point x="60" y="150"></point>
        <point x="75" y="180"></point>
        <point x="135" y="105"></point>
      </polygon>
    </shape>
    <shape name="plant" rotatable="false" editableColorIndex="0">
      <rectangle endX="165" startY="90" marked="true" color="-1920102913" endY="300" startX="135" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="255"></point>
        <point x="90" y="210"></point>
        <point x="45" y="195"></point>
        <point x="75" y="255"></point>
        <point x="135" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="255"></point>
        <point x="210" y="210"></point>
        <point x="255" y="195"></point>
        <point x="225" y="255"></point>
        <point x="165" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="180"></point>
        <point x="90" y="135"></point>
        <point x="45" y="120"></point>
        <point x="75" y="180"></point>
        <point x="135" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="180"></point>
        <point x="165" y="210"></point>
        <point x="225" y="180"></point>
        <point x="255" y="120"></point>
        <point x="210" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="105"></point>
        <point x="90" y="60"></point>
        <point x="45" y="45"></point>
        <point x="75" y="105"></point>
        <point x="135" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="105"></point>
        <point x="165" y="135"></point>
        <point x="225" y="105"></point>
        <point x="255" y="45"></point>
        <point x="210" y="60"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="90"></point>
        <point x="120" y="45"></point>
        <point x="150" y="15"></point>
        <point x="180" y="45"></point>
        <point x="165" y="90"></point>
      </polygon>
    </shape>
    <shape name="sheep" rotatable="false" editableColorIndex="15">
      <circle x="203" y="65" marked="true" color="-1" diameter="88" filled="true"></circle>
      <circle x="70" y="65" marked="true" color="-1" diameter="162" filled="true"></circle>
      <circle x="150" y="105" marked="true" color="-1" diameter="120" filled="true"></circle>
      <polygon color="-1920102913" filled="true" marked="false">
        <point x="218" y="120"></point>
        <point x="240" y="165"></point>
        <point x="255" y="165"></point>
        <point x="278" y="120"></point>
      </polygon>
      <circle x="214" y="72" marked="false" color="-1920102913" diameter="67" filled="true"></circle>
      <rectangle endX="179" startY="223" marked="true" color="-1" endY="298" startX="164" filled="true"></rectangle>
      <polygon color="-1" filled="true" marked="true">
        <point x="45" y="285"></point>
        <point x="30" y="285"></point>
        <point x="30" y="240"></point>
        <point x="15" y="195"></point>
        <point x="45" y="210"></point>
      </polygon>
      <circle x="3" y="83" marked="true" color="-1" diameter="150" filled="true"></circle>
      <rectangle endX="80" startY="221" marked="true" color="-1" endY="296" startX="65" filled="true"></rectangle>
      <polygon color="-1" filled="true" marked="true">
        <point x="195" y="285"></point>
        <point x="210" y="285"></point>
        <point x="210" y="240"></point>
        <point x="240" y="210"></point>
        <point x="195" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="false">
        <point x="276" y="85"></point>
        <point x="285" y="105"></point>
        <point x="302" y="99"></point>
        <point x="294" y="83"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="false">
        <point x="219" y="85"></point>
        <point x="210" y="105"></point>
        <point x="193" y="99"></point>
        <point x="201" y="83"></point>
      </polygon>
    </shape>
    <shape name="square" rotatable="false" editableColorIndex="0">
      <rectangle endX="270" startY="30" marked="true" color="-1920102913" endY="270" startX="30" filled="true"></rectangle>
    </shape>
    <shape name="square 2" rotatable="false" editableColorIndex="0">
      <rectangle endX="270" startY="30" marked="true" color="-1920102913" endY="270" startX="30" filled="true"></rectangle>
      <rectangle endX="240" startY="60" marked="false" color="255" endY="240" startX="60" filled="true"></rectangle>
    </shape>
    <shape name="star" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="151" y="1"></point>
        <point x="185" y="108"></point>
        <point x="298" y="108"></point>
        <point x="207" y="175"></point>
        <point x="242" y="282"></point>
        <point x="151" y="216"></point>
        <point x="59" y="282"></point>
        <point x="94" y="175"></point>
        <point x="3" y="108"></point>
        <point x="116" y="108"></point>
      </polygon>
    </shape>
    <shape name="target" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
      <circle x="60" y="60" marked="true" color="-1920102913" diameter="180" filled="true"></circle>
      <circle x="90" y="90" marked="false" color="255" diameter="120" filled="true"></circle>
      <circle x="120" y="120" marked="true" color="-1920102913" diameter="60" filled="true"></circle>
    </shape>
    <shape name="tree" rotatable="false" editableColorIndex="0">
      <circle x="118" y="3" marked="true" color="-1920102913" diameter="94" filled="true"></circle>
      <rectangle endX="180" startY="195" marked="false" color="-1653716737" endY="300" startX="120" filled="true"></rectangle>
      <circle x="65" y="21" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="116" y="41" marked="true" color="-1920102913" diameter="127" filled="true"></circle>
      <circle x="45" y="90" marked="true" color="-1920102913" diameter="120" filled="true"></circle>
      <circle x="104" y="74" marked="true" color="-1920102913" diameter="152" filled="true"></circle>
    </shape>
    <shape name="triangle" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="30"></point>
        <point x="15" y="255"></point>
        <point x="285" y="255"></point>
      </polygon>
    </shape>
    <shape name="triangle 2" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="30"></point>
        <point x="15" y="255"></point>
        <point x="285" y="255"></point>
      </polygon>
      <polygon color="255" filled="true" marked="false">
        <point x="151" y="99"></point>
        <point x="225" y="223"></point>
        <point x="75" y="224"></point>
      </polygon>
    </shape>
    <shape name="truck" rotatable="false" editableColorIndex="0">
      <rectangle endX="195" startY="45" marked="true" color="-1920102913" endY="187" startX="4" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="296" y="193"></point>
        <point x="296" y="150"></point>
        <point x="259" y="134"></point>
        <point x="244" y="104"></point>
        <point x="208" y="104"></point>
        <point x="207" y="194"></point>
      </polygon>
      <rectangle endX="195" startY="60" marked="false" color="-1" endY="105" startX="195" filled="true"></rectangle>
      <polygon color="255" filled="true" marked="false">
        <point x="238" y="112"></point>
        <point x="252" y="141"></point>
        <point x="219" y="141"></point>
        <point x="218" y="112"></point>
      </polygon>
      <circle x="234" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <rectangle endX="214" startY="185" marked="true" color="-1920102913" endY="194" startX="181" filled="true"></rectangle>
      <circle x="144" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <circle x="24" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <circle x="24" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
      <circle x="144" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
      <circle x="234" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
    </shape>
    <shape name="turtle" rotatable="true" editableColorIndex="0">
      <polygon color="1504722175" filled="true" marked="false">
        <point x="215" y="204"></point>
        <point x="240" y="233"></point>
        <point x="246" y="254"></point>
        <point x="228" y="266"></point>
        <point x="215" y="252"></point>
        <point x="193" y="210"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="195" y="90"></point>
        <point x="225" y="75"></point>
        <point x="245" y="75"></point>
        <point x="260" y="89"></point>
        <point x="269" y="108"></point>
        <point x="261" y="124"></point>
        <point x="240" y="105"></point>
        <point x="225" y="105"></point>
        <point x="210" y="105"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="105" y="90"></point>
        <point x="75" y="75"></point>
        <point x="55" y="75"></point>
        <point x="40" y="89"></point>
        <point x="31" y="108"></point>
        <point x="39" y="124"></point>
        <point x="60" y="105"></point>
        <point x="75" y="105"></point>
        <point x="90" y="105"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="132" y="85"></point>
        <point x="134" y="64"></point>
        <point x="107" y="51"></point>
        <point x="108" y="17"></point>
        <point x="150" y="2"></point>
        <point x="192" y="18"></point>
        <point x="192" y="52"></point>
        <point x="169" y="65"></point>
        <point x="172" y="87"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="85" y="204"></point>
        <point x="60" y="233"></point>
        <point x="54" y="254"></point>
        <point x="72" y="266"></point>
        <point x="85" y="252"></point>
        <point x="107" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="119" y="75"></point>
        <point x="179" y="75"></point>
        <point x="209" y="101"></point>
        <point x="224" y="135"></point>
        <point x="220" y="225"></point>
        <point x="175" y="261"></point>
        <point x="128" y="261"></point>
        <point x="81" y="224"></point>
        <point x="74" y="135"></point>
        <point x="88" y="99"></point>
      </polygon>
    </shape>
    <shape name="wheel" rotatable="false" editableColorIndex="0">
      <circle x="3" y="3" marked="true" color="-1920102913" diameter="294" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
      <line endX="150" startY="285" marked="true" color="-1920102913" endY="15" startX="150"></line>
      <line endX="285" startY="150" marked="true" color="-1920102913" endY="150" startX="15"></line>
      <circle x="120" y="120" marked="true" color="-1920102913" diameter="60" filled="true"></circle>
      <line endX="79" startY="40" marked="true" color="-1920102913" endY="269" startX="216"></line>
      <line endX="269" startY="84" marked="true" color="-1920102913" endY="221" startX="40"></line>
      <line endX="269" startY="216" marked="true" color="-1920102913" endY="79" startX="40"></line>
      <line endX="221" startY="40" marked="true" color="-1920102913" endY="269" startX="84"></line>
    </shape>
    <shape name="wolf" rotatable="false" editableColorIndex="0">
      <polygon color="255" filled="true" marked="false">
        <point x="253" y="133"></point>
        <point x="245" y="131"></point>
        <point x="245" y="133"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="2" y="194"></point>
        <point x="13" y="197"></point>
        <point x="30" y="191"></point>
        <point x="38" y="193"></point>
        <point x="38" y="205"></point>
        <point x="20" y="226"></point>
        <point x="20" y="257"></point>
        <point x="27" y="265"></point>
        <point x="38" y="266"></point>
        <point x="40" y="260"></point>
        <point x="31" y="253"></point>
        <point x="31" y="230"></point>
        <point x="60" y="206"></point>
        <point x="68" y="198"></point>
        <point x="75" y="209"></point>
        <point x="66" y="228"></point>
        <point x="65" y="243"></point>
        <point x="82" y="261"></point>
        <point x="84" y="268"></point>
        <point x="100" y="267"></point>
        <point x="103" y="261"></point>
        <point x="77" y="239"></point>
        <point x="79" y="231"></point>
        <point x="100" y="207"></point>
        <point x="98" y="196"></point>
        <point x="119" y="201"></point>
        <point x="143" y="202"></point>
        <point x="160" y="195"></point>
        <point x="166" y="210"></point>
        <point x="172" y="213"></point>
        <point x="173" y="238"></point>
        <point x="167" y="251"></point>
        <point x="160" y="248"></point>
        <point x="154" y="265"></point>
        <point x="169" y="264"></point>
        <point x="178" y="247"></point>
        <point x="186" y="240"></point>
        <point x="198" y="260"></point>
        <point x="200" y="271"></point>
        <point x="217" y="271"></point>
        <point x="219" y="262"></point>
        <point x="207" y="258"></point>
        <point x="195" y="230"></point>
        <point x="192" y="198"></point>
        <point x="210" y="184"></point>
        <point x="227" y="164"></point>
        <point x="242" y="144"></point>
        <point x="259" y="145"></point>
        <point x="284" y="151"></point>
        <point x="277" y="141"></point>
        <point x="293" y="140"></point>
        <point x="299" y="134"></point>
        <point x="297" y="127"></point>
        <point x="273" y="119"></point>
        <point x="270" y="105"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="-1" y="195"></point>
        <point x="14" y="180"></point>
        <point x="36" y="166"></point>
        <point x="40" y="153"></point>
        <point x="53" y="140"></point>
        <point x="82" y="131"></point>
        <point x="134" y="133"></point>
        <point x="159" y="126"></point>
        <point x="188" y="115"></point>
        <point x="227" y="108"></point>
        <point x="236" y="102"></point>
        <point x="238" y="98"></point>
        <point x="268" y="86"></point>
        <point x="269" y="92"></point>
        <point x="281" y="87"></point>
        <point x="269" y="103"></point>
        <point x="269" y="113"></point>
      </polygon>
    </shape>
    <shape name="x" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="270" y="75"></point>
        <point x="225" y="30"></point>
        <point x="30" y="225"></point>
        <point x="75" y="270"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="30" y="75"></point>
        <point x="75" y="30"></point>
        <point x="270" y="225"></point>
        <point x="225" y="270"></point>
      </polygon>
    </shape>
  </turtleShapes>
  <linkShapes>
    <shape name="default" curviness="0.0">
      <lines>
        <line x="-0.2" visible="false">
          <dash value="0.0"></dash>
          <dash value="1.0"></dash>
        </line>
        <line x="0.0" visible="true">
          <dash value="1.0"></dash>
          <dash value="0.0"></dash>
        </line>
        <line x="0.2" visible="false">
          <dash value="0.0"></dash>
          <dash value="1.0"></dash>
        </line>
      </lines>
      <indicator>
        <shape name="link direction" rotatable="true" editableColorIndex="0">
          <line endX="90" startY="150" marked="true" color="-1920102913" endY="180" startX="150"></line>
          <line endX="210" startY="150" marked="true" color="-1920102913" endY="180" startX="150"></line>
        </shape>
      </indicator>
    </shape>
  </linkShapes>
  <previewCommands>setup repeat 75 [ go ]</previewCommands>
  <experiments>
    <experiment name="experiment_confidence_0" repetitions="30" sequentialRunOrder="true" runMetricsEveryStep="false">
      <setup>setup</setup>
      <go>go</go>
      <metrics>
        <metric>length team-list</metric>
        <metric>team-list</metric>
        <metric>team-member-counts</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="number-of-people">
          <value value="250"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="leader-boost-radius">
          <value value="10"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="new-team-chance">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="min-manipulation">
          <value value="20"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="weather">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-teams">
          <value value="2"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="min-confidence">
          <value value="0"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="experiment_confidence_25" repetitions="30" sequentialRunOrder="true" runMetricsEveryStep="false">
      <setup>setup</setup>
      <go>go</go>
      <metrics>
        <metric>length team-list</metric>
        <metric>team-list</metric>
        <metric>team-member-counts</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="number-of-people">
          <value value="250"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="leader-boost-radius">
          <value value="10"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="new-team-chance">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="min-manipulation">
          <value value="20"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="weather">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-teams">
          <value value="2"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="min-confidence">
          <value value="25"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="experiment_confidence_50" repetitions="30" sequentialRunOrder="true" runMetricsEveryStep="false">
      <setup>setup</setup>
      <go>go</go>
      <metrics>
        <metric>length team-list</metric>
        <metric>team-list</metric>
        <metric>team-member-counts</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="number-of-people">
          <value value="250"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="leader-boost-radius">
          <value value="10"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="new-team-chance">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="min-manipulation">
          <value value="20"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="weather">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-teams">
          <value value="2"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="min-confidence">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="experiment_confidence_75" repetitions="30" sequentialRunOrder="true" runMetricsEveryStep="false">
      <setup>setup</setup>
      <go>go</go>
      <metrics>
        <metric>length team-list</metric>
        <metric>team-list</metric>
        <metric>team-member-counts</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="number-of-people">
          <value value="250"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="leader-boost-radius">
          <value value="10"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="new-team-chance">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="min-manipulation">
          <value value="20"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="weather">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-teams">
          <value value="2"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="min-confidence">
          <value value="75"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="experiment_confidence_100" repetitions="30" sequentialRunOrder="true" runMetricsEveryStep="false">
      <setup>setup</setup>
      <go>go</go>
      <metrics>
        <metric>length team-list</metric>
        <metric>team-list</metric>
        <metric>team-member-counts</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="number-of-people">
          <value value="250"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="leader-boost-radius">
          <value value="10"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="new-team-chance">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="min-manipulation">
          <value value="20"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="weather">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-teams">
          <value value="2"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="min-confidence">
          <value value="100"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
  </experiments>
</model>
